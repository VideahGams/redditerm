#!/usr/bin/env python3
#
# redditerm Version 0.2
#
# This code is licensed under the MIT Open Source License.
#
# Copyright (c) 2015 Ruairidh Carmichael - ruairidhcarmichael@live.co.uk
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

import urllib.request, json, sys

# Has the user inputted a username, if not, quit.
try:
  user = sys.argv[1]
except:
  print("Error: No username provided. Please enter a username as an argument.")
  sys.exit()

# Grab the users 'about.json', make sure to set the user agent.
url = "http://www.reddit.com/user/{username}/about.json".format(username = user)

req = urllib.request.Request(url, data = None, headers = {'User-Agent': 'redditerm'})

# If we can't get the users info, give up and output an error.
try:
  response = urllib.request.urlopen(req);
except:
  print("There was an error loading the account '{username}'. Are you sure it exists?".format(username = user))
  sys.exit()

# Read the JSON and decode it.
rawdata = response.read()
data = json.loads(rawdata.decode())


# Construct the terminal output.
output = """
                                                                                                           
                      ███▄▄▄ ▄█▀▀▀█     
                     ▐█     ▀█▌   █▌    
                    ▐█        ▀███▀     
                    █▌                    {red}Username:{clear} {name}
           ▄▄██▀▀▀▀▀▀▀▀▀▀██▄▄           
   ▄█▀▀███▀▀                 ▀▀██▀▀▀█▄    {red}Link Karma:{clear} {link_karma}
  ▐█  █▀      {red}▄▄▄       ▄▄▄{clear}     ▀█▄ ▐█  
   ███       {red}█████     █████{clear}      ███▀    {red}Comment Karma:{clear} {comment_karma}
    █▌       {red}▀███▀     ▀███▀{clear}       █    
    ▐█                            ▐█    
     ▀█       ▄▄         ▄▄      ▄█     
       ▀█▄      ▀▀█████▀▀     ▄▄█▀      
          ▀██▄▄▄        ▄▄▄▄█▀▀         
               ▀▀▀▀▀▀▀▀▀▀               


"""

output = output.format(

  red = "\x1b[1;31m", # ANSI Color Codes.
  clear = "\x1b[0m",
  name = data['data']['name'], # Max reddit username length is 20, so we should be fine.
  link_karma = str(data['data']['link_karma']),
  comment_karma = str(data['data']['comment_karma'])

)


# Finally, display said output.
print(output)